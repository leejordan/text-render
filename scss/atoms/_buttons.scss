// Buttons
//
// Inputs, buttons, and links that look like buttons.
//
// Styleguide Atoms.Buttons


// Default button
//
// Styles applied by default to all `button` elements and `type="button"` elements.
// Can also be applied to other elements such as links with class `button`.
//
// Disabled states  on `button` and `input` elements can be set with the `disabled` attribute.
// Links, however, do not have a disabled property.
//
// Markup:
// <button>Button element</button>
// <button disabled>Disabled button</button><br>
// <input type="button" value="Input type=button">
// <input type="button" disabled value="Disabled input type=button"><br>
// <a href="#0" class="button">Link with button style</a>
//
// Weight: -1
//
// Styleguide Atoms.Buttons.Default

button,
.button,
[type="button"],
[type="submit"],
[type="reset"] {
    min-height: 2.5em;
    min-width: 2.5em;
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    transform: translate3d(0, 0, 0);
    vertical-align: middle;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin: 0;
    padding: 0 $section-spacing-small 0 0;
    border: 0;
    border-radius: 0;
    background-color: transparent;
    color: $colour-ui-button;
    font-family: $font-family-base;
    font-weight: $font-weight-base;
    line-height: $line-height-base;
    text-decoration: none;
    text-align: center;
    background-image: none;
    cursor: pointer;
    @include svg-inline($colour-ui-button, 1.25em, 1.25em);

    svg.icon {
        margin: 0 $section-spacing-xsmall 0 $section-spacing-small;
    }

    &:hover,
    &:focus,
    &:focus-within {
        background-color: transparent;
        color: $colour-ui-button;
        text-decoration: none;
        @include svg-inline($colour-ui-button, 1.25em, 1.25em);

        svg.icon {
            overflow: visible;
            box-shadow: 0 0 0 10px $colour-ui-button-hover;
            background-color: $colour-ui-button-hover;
            border-radius: 50%;
        }
    }

    &:active,
    &:focus,
    &:focus-within {
        box-shadow: none;
    }

    &:disabled {
        cursor: not-allowed;
        opacity: .8;
    }
}


// Block button
//
// Makes a button take up the entire width of it's parent
//
// Markup:
// <button class="button button--block">Button element</button>
// <input class="button button--block" type="button" value="Input type=button">
// <a href="#0" class="button button--block">Link with button style</a>
//
// Styleguide Atoms.Buttons.Block

.button--block {
    width: 100%;
}
